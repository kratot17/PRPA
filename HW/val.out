==140== Memcheck, a memory error detector
==140== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==140== Using Valgrind-3.14.0 and LibVEX; rerun with -h for copyright info
==140== Command: src/main
==140== 
==140== Invalid write of size 1
==140==    at 0x401333: main (main.c:50)
==140==  Address 0x4a15086 is 0 bytes after a block of size 6 alloc'd
==140==    at 0x483577F: malloc (vg_replace_malloc.c:299)
==140==    by 0x4012B5: main (main.c:42)
==140== 
==140== Invalid write of size 1
==140==    at 0x401374: main (main.c:56)
==140==  Address 0x4a1508a is 4 bytes after a block of size 6 alloc'd
==140==    at 0x483577F: malloc (vg_replace_malloc.c:299)
==140==    by 0x4012B5: main (main.c:42)
==140== 
==140== Invalid read of size 1
==140==    at 0x4839D20: strcmp (vg_replace_strmem.c:848)
==140==    by 0x4013C9: main (main.c:62)
==140==  Address 0x4a15086 is 0 bytes after a block of size 6 alloc'd
==140==    at 0x483577F: malloc (vg_replace_malloc.c:299)
==140==    by 0x4012B5: main (main.c:42)
==140== 
==140== Invalid read of size 1
==140==    at 0x4839D24: strcmp (vg_replace_strmem.c:848)
==140==    by 0x4013C9: main (main.c:62)
==140==  Address 0x4a15086 is 0 bytes after a block of size 6 alloc'd
==140==    at 0x483577F: malloc (vg_replace_malloc.c:299)
==140==    by 0x4012B5: main (main.c:42)
==140== 
==140== Invalid read of size 1
==140==    at 0x49A76B0: __strcmp_avx2 (strcmp-avx2.S:92)
==140==    by 0x4013C9: main (main.c:62)
==140==  Address 0x6d61697445 is not stack'd, malloc'd or (recently) free'd
==140== 
==140== 
==140== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==140==  Access not within mapped region at address 0x6D61697445
==140==    at 0x49A76B0: __strcmp_avx2 (strcmp-avx2.S:92)
==140==    by 0x4013C9: main (main.c:62)
==140==  If you believe this happened as a result of a stack
==140==  overflow in your program's main thread (unlikely but
==140==  possible), you can try to increase the size of the
==140==  main thread stack using the --main-stacksize= flag.
==140==  The main thread stack size used in this run was 8388608.
==140== 
==140== HEAP SUMMARY:
==140==     in use at exit: 2,137 bytes in 315 blocks
==140==   total heap usage: 316 allocs, 1 frees, 6,233 bytes allocated
==140== 
==140== 23 bytes in 4 blocks are possibly lost in loss record 1 of 3
==140==    at 0x483577F: malloc (vg_replace_malloc.c:299)
==140==    by 0x4012B5: main (main.c:42)
==140== 
==140== 752 bytes in 114 blocks are definitely lost in loss record 2 of 3
==140==    at 0x483577F: malloc (vg_replace_malloc.c:299)
==140==    by 0x4012B5: main (main.c:42)
==140== 
==140== LEAK SUMMARY:
==140==    definitely lost: 752 bytes in 114 blocks
==140==    indirectly lost: 0 bytes in 0 blocks
==140==      possibly lost: 23 bytes in 4 blocks
==140==    still reachable: 1,362 bytes in 197 blocks
==140==         suppressed: 0 bytes in 0 blocks
==140== Reachable blocks (those to which a pointer was found) are not shown.
==140== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==140== 
==140== For counts of detected and suppressed errors, rerun with: -v
==140== ERROR SUMMARY: 23 errors from 7 contexts (suppressed: 0 from 0)